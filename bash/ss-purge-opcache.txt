#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: littlebizzy/slickstack/blob/master/bash/ss-purge-opcache.txt ##########################
#### path: /var/www/ss-purge-opcache ###############################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Clears the PHP-FPM OPcache by deleting files under /var/www/cache/opcache/ ###########
#### module version: PHP-FPM 8.3.x #################################################################
#### sourced by: n/a ###############################################################################
#### bash aliases: ss purge opcache ################################################################
####################################################################################################

## PURGING CACHES DURING TRAFFIC SPIKES MIGHT CAUSE SUDDEN STRAIN TO SERVER RESOURCES ##
## KEEP IN MIND THAT MOST CACHING IS ALREADY DISABLED ON DEV/STAGING SUBDOMAINS ##

####################################################################################################
#### TABLE OF CONTENTS (SS-Purge-OPcache) ##########################################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Source SS-Config + SS-Functions
## B. Touch Timestamp File
## C. Message (Begin Script)
## D. Purge OPcache Via WP-CLI
## E. Purge OPcache Via PHP Script (Fallback)
## F. Purge Physical OPcache Files

####################################################################################################
#### A. SS-Purge-OPcache: Source SS-Config + SS-Functions ##########################################
####################################################################################################

## before anything else we must source the critical variables that power this script ##
## ss-config is setup during ss-install wizard but ss-functions is hardcoded ##

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### B. SS-Purge-OPcache: Touch Timestamp File #####################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

ss_touch "${TIMESTAMP_SS_PURGE_OPCACHE}"

####################################################################################################
#### C. SS-Purge-OPcache: Message (Begin Script) ###################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be seen by sudo users who manually run this script in the shell ##

ss_echo "${COLOR_INFO}Running ss-purge-opcache... ${COLOR_RESET}"

####################################################################################################
#### D. SS-Purge-OPcache: Purge OPcache Via WP-CLI #################################################
####################################################################################################

## clears in-memory OPcache using WP-CLI ensuring updated scripts load without any delay ##
## does not remove physical OPcache files, only resets cached PHP files in memory ##

sudo -u "${SFTP_USER}" "${PATH_WP_CLI}" --path="${PATH_WEB_ROOT}" eval 'opcache_reset();'

####################################################################################################
#### E. SS-Purge-OPcache: Purge OPcache Via PHP Script (Fallback) ##################################
####################################################################################################

## creates and executes temporary PHP script to manually reset OPcache via curl request ##
## always runs regardless of WP-CLI method, ensures OPcache is cleared properly ##

## generate unique filename ##
RANDOM_STRING_PURGE_OPCACHE=$(openssl rand -hex 12)
PURGE_OPCACHE_FILENAME="purge-${RANDOM_STRING_PURGE_OPCACHE}.php"
PURGE_OPCACHE_FILEPATH="/var/www/html/${PURGE_OPCACHE_FILENAME}"

## create temp php script to reset opcache ##
echo "<?php if (function_exists('opcache_reset')) { opcache_reset(); } ?>" > "${PURGE_OPCACHE_FILEPATH}"

## allow php-fpm to safely read/execute the temp script ##
chown root:www-data "${PURGE_OPCACHE_FILEPATH}"
chmod 0644 "${PURGE_OPCACHE_FILEPATH}" ## must be 0644

## execute temp script via https (wget) request ##
# curl --silent --show-error --fail --max-time 5 --connect-timeout 3 --retry 3 --retry-connrefused "https://${SITE_FULL_DOMAIN}/${PURGE_OPCACHE_FILENAME}" > /dev/null
wget --quiet --spider --timeout=3 --tries=3 --waitretry=5 "https://${SITE_FULL_DOMAIN}/${PURGE_OPCACHE_FILENAME}"

## delete temp script ##
ss_rm "${PURGE_OPCACHE_FILEPATH}"

####################################################################################################
#### F. SS-Purge-OPcache: Purge Physical OPcache Files #############################################
####################################################################################################

## removes physical OPcache files stored on disk if PHP file caching feature is enabled ##
## required when opcache.file_cache is 1 as opcache_reset() does not clear these ##

 ss_rm "${PATH_CACHE_OPCACHE}"*

####################################################################################################
#### SlickStack: Reset Permissions (SlickStack Scripts) ############################################
####################################################################################################

## we include this permissions reset in all cron jobs and bash scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute any SlickStack scripts ##

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS
## SNIPPET: ss bash scripts, ss cron jobs
## UPDATED: 02JUL2022

chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chown root:root /var/www/crons/custom/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/custom/*cron* ## 0700 means only root/sudo can execute

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: ChatGPT
## Ref: https://www.php.net/manual/en/function.opcache-reset.php#121513
## Ref: https://stackoverflow.com/questions/5506913/bash-script-to-run-php-script
## Ref: https://coderwall.com/p/yrqrkw/delete-all-existing-wordpress-transients-in-mysql-database
## Ref: https://stackoverflow.com/questions/10422574/can-i-remove-transients-in-the-wp-options-table-of-my-wordpress-install
## Ref: https://wordpress.stackexchange.com/questions/73477/is-there-any-danger-in-deleting-all-transients
## Ref: https://stackoverflow.com/questions/20033648/how-to-run-mysql-command-on-bash
## Ref: https://serverfault.com/questions/337818/how-to-force-mysql-to-connect-by-tcp-instead-of-a-unix-socket
## Ref: https://stackoverflow.com/questions/33067909/bash-variable-under-a-mysql-query
## Ref: https://dev.mysql.com/doc/refman/5.7/en/examples.html
## Ref: https://stackoverflow.com/questions/25044817/zend-opcache-opcache-enable-cli-1-or-0-what-does-it-do#comment91052089_35880017
## Ref: https://codex.wordpress.org/Class_Reference/WP_Object_Cache
## Ref: https://pressidium.com/blog/2017/wordpress-object-caching-redis-memcached-and-native-apis/
## Ref: https://pressjitsu.com/blog/transient-cache-alternatives/
## Ref: https://unix.stackexchange.com/questions/87258/delete-all-files-except-in-a-certain-subdirectory-with-find
## Ref: https://github.com/littlebizzy/slickstack/issues/57

## SS_EOF
